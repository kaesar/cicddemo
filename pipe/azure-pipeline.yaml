trigger:
- '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  AWS_REGION: 'us-east-1'

stages:
- stage: CheckoutClone
  jobs:
  - job: CheckoutCloneJob
    steps:
    - script: |
        git --version
        curl --version
        node -v
        git clone https://github.com/kaesar/cicddemo.git
      displayName: 'Checkout/Clone'
    workspace:
      clean: all

- stage: BuildNodeJSCode
  jobs:
  - job: BuildNodeJSCodeJob
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
        displayName: 'Install Node.js'
      displayName: 'Install Node.js'
    
    - script: |
        cd cicddemo
        npm install
        npm run build
      displayName: 'Build NodeJS Code'

- stage: CheckBuildDockerImage
  jobs:
  - job: CheckBuildDockerImageJob
    steps:
    - script: |
        docker --version
        docker build -t cicddemo:v1 .
      displayName: 'Check/Build Docker Image'

- stage: PrepareIaCWithTerraform
  jobs:
  - job: PrepareIaCWithTerraformJob
    steps:
    - script: |
        terraform -version
        terraform init
        terraform validate
        terraform plan -out=tfplan
      displayName: 'Prepare IaC with Terraform'

- stage: DeployToAWS
  jobs:
  - job: DeployToAWSJob
    steps:
    - script: |
        terraform apply -auto-approve
      displayName: 'Deploy to AWS'

- stage: Cleanup
  jobs:
  - job: CleanupJob
    steps:
    - script: |
        terraform destroy -auto-approve
      displayName: 'Cleanup'
